workspace:
  base: /wrkspace
  path: src/github.com/karantin2020/hello-drone

cache:
  mount:
    - foo
  
clone:
  git:
    image: plugins/git
    depth: 3

pipeline:
  # these steps define a parallel execution
  # group and will fan out.
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./foo
    volumes:
      - $PWD/drone/cache:/cache

  build:
    image: alpine:edge
    commands:
      - echo this step should not fail
      - echo DRONE_JOB_NUMBER ${DRONE_JOB_NUMBER}
      - ls /wrkspace
      - exit 0
  test:
    image: alpine:edge
    commands:
      - echo this step should execute when success
      - echo ${DRONE_COMMIT}
      - echo ${DRONE_BUILD_EVENT}
      - echo ${DRONE_JOB_NUMBER}
      - echo ${DRONE_DEPLOY_TO}
      - touch /wrkspace/foo/test.txt && echo "test foo" > /wrkspace/foo/test.txt
    when:
      status: [ success ]

  deploy:
    image: alpine:edge
    commands:
      - echo deploy step
      - touch /wrkspace/foo/deploy.txt && echo "test deploy" > /wrkspace/foo/deploy.txt
      - exit 0
    when:
      event: deployment
      environment: production
      
  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./foo
    volumes:
      - $PWD/drone/cache:/cache
